[user]
  name = Chance Zibolski
  email = chance.zibolski@gmail.com
[github]
  user = chancez
[color]
  ui = true
[core]
  excludesfile = ~/.gitignore
  untrackedCache = true
[mergetool "nvim"]
  cmd = nvim -f -c \"Gvdiffsplit!\" \"$MERGED\"
[mergetool]
  promt = false
[merge]
  tool = nvim
  log = true
  conflictstyle = zdiff3
[diff]
  compactionHeuristic = true
  algorithm = histogram
  renameLimit = 2000
  submodule = log
[alias]
  ls = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate
  ll = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --numstat
  lnc = log --pretty=format:"%h\\ %s\\ [%cn]"
  lds = log --pretty=format:"%C(yellow)%h\\ %ad%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --date=short
  le = log --oneline --decorate
  l = "!git ll -1"
  dlc = diff --cached HEAD^
  la = "!git config -l | grep alias | cut -c 7-"
  amend = commit --amend -C HEAD
  undo = reset --soft HEAD^
  count = shortlog -sn
  conflicts = diff --name-only --diff-filter=U
  addnw=!sh -c 'git diff -U0 -w --no-color "$@" | git apply --cached --ignore-whitespace --unidiff-zero -'
  # golang.org code review aliases
  change = codereview change
  gofmt = codereview gofmt
  mail = codereview mail
  pending = codereview pending
  submit = codereview submit
  sync = codereview sync
  fixup = "!sh -c '(git diff-files --quiet || (echo Unstaged changes, please commit or stash with --keep-index; exit 1)) && COMMIT=$(git rev-parse $1) && git commit --fixup=$COMMIT && git rebase -i --autosquash $COMMIT~1' -"
[push]
  default = current
  autoSetupRemote = true
[pull]
  default = current
  rebase = true
[help]
  autocorrect = 3
[grep]
  linenumber = true
[filter "media"]
  clean = git-media-clean %f
  smudge = git-media-smudge %f
[hub]
  protocol = ssh
[fetch]
  prune = true
[http]
	cookiefile = /Users/chancezibolski/.gitcookies
[rebase]
  autosquash = true
[filter "lfs"]
  clean = git-lfs clean -- %f
  smudge = git-lfs smudge -- %f
  process = git-lfs filter-process
  required = true
[init]
  defaultBranch = main
  templateDir = ~/.git-template
[includeIf "gitdir:~/projects/work/"]
  path = ~/.gitconfig-work
[url "ssh://git@github.com/"]
  insteadOf = https://github.com/
[advice]
	statusHints = false
	skippedCherryPicks = false
[rerere]
  enabled = true
[status]
  submoduleSummary = true
[submodule]
  recurse = true
